[package]
name = "chess_web"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
leptos = { version = "0.3.0", default-features = false, features = ["serde"] }
leptos_actix = { version = "0.3.0", optional = true }
leptos_meta = { version = "0.3.0", default-features = false }
leptos_router = { version = "0.3.0", default-features = false }
gloo-net = { version = "0.2", features = ["http"] }
cfg-if = { version = "1.0" }
log = { version = "0.4.19" }
jwt = { version = "0.16.0" }
hmac = { version = "0.12.1" }
sha2 = { version = "0.10.7" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1" }

# dependecies for client (enable when csr or hydrate set)
wasm-bindgen = { version = "0.2", optional = true }
console_log = { version = "1", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
web-sys = { version = "0.3.60", features = [
    "DataTransfer",
    "Document",
    "HtmlDocument",
    "HtmlButtonElement",
    "DomRect",
    "DragEvent",
    "Element",
    "ElementCreationOptions",
    "TouchEvent",
    "TouchList",
    "Touch",
    "NamedNodeMap",
    "Attr",
    "Storage",
    "Window",
    "DomTokenList",
    "Request",
    "RequestInit",
    "EventListener",
    "EventTarget",
] }
getrandom = { version = "0.2.10", features = ["js"] }
js-sys = { version = "0.3.64", optional = true }
rand = { version = "0.8.5", optional = true }
env_logger = { version = "0.10.0", optional = true }

# dependecies for server (enable when ssr set)
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", features = ["macros"], optional = true }
futures = { version = "0.3", optional = true }
simple_logger = { version = "4.0", optional = true }
actix-service = { version = "2.0.2", optional = true }
actix-router = { version = "0.5.1", optional = true }
actix = { version = "0.13.0", optional = true }
actix-web-actors = { version = "4.2.0", optional = true }
uuid = { version = "1.4.0", features = ["v4"], optional = true }

[features]
default = ["csr"]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "dep:wasm-bindgen",
    "dep:console_log",
    "dep:console_error_panic_hook",
    "dep:js-sys",
]
csr = [
    "leptos/csr",
    "leptos_meta/csr",
    "leptos_router/csr",
    "dep:wasm-bindgen",
    "dep:console_log",
    "dep:console_error_panic_hook",
    "dep:js-sys",
]
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:leptos_actix",
    "dep:actix-web",
    "dep:actix-files",
    "dep:futures",
    "dep:simple_logger",
    "dep:actix-service",
    "dep:actix-router",
    "dep:actix",
    "dep:actix-web-actors",
    "dep:rand",
    "dep:env_logger",
    "dep:uuid",
]

[package.metadata.cargo-all-features]
denylist = [
    "actix-files",
    "actix-web",
    "console_error_panic_hook",
    "console_log",
    "futures",
    "leptos_actix",
    "simple_logger",
    "wasm-bindgen",
    "actix",
    "actix-web-actors",
]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "chess_web"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# # [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "pkg/chess_web.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3100"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
